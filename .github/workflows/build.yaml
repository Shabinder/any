name: Build

on:
  workflow_call:
    inputs:
      check:
        required: true
        type: boolean
      gen_baseline_profile:
        required: true
        type: boolean
      release:
        required: true
        type: boolean
    secrets:
      keystore_base64:
        required: true
      keystore_password:
        required: true
      keystore_key_password:
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      KEYSTORE_PATH: ./release.jks
    steps:
      - uses: actions/checkout@v3

      - name: Set up node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Upgrade yarn
        run: |
          corepack enable
          corepack prepare yarn@stable --activate
          echo "yarn version: $(yarn -v)"

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn config get globalFolder)/cache" >> $GITHUB_OUTPUT
        shell: bash

      - name: Restore yarn cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: yarn-cache-folder-${{ hashFiles('js/**/yarn.lock', 'js/**/.yarnrc.yml') }}
          restore-keys: |
            yarn-cache-folder-

      - name: Install npm dependencies for built-in services
        run: node runInEachProject.js --no-interaction yarn
        working-directory: js/services/

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: gradle

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Run tests
        if: ${{ inputs.check }}
        run: ./gradlew check

      - name: Generate baseline profile
        if: ${{ inputs.gen_baseline_profile }}
        run: ./gradlew macrobenchmark:pixel2Api31BenchmarkAndroidTest -PdisableSplits

      - name: Copy baseline profile to app module
        if: ${{ inputs.gen_baseline_profile }}
        run: |
          profile_path="./android/macrobenchmark/build/outputs/
          managed_device_android_test_additional_output/pixel2Api31/
          BaselineProfileGenerator_startup-baseline-prof.txt"
          
          output_path="./android/app/src/baseline-prof.txt"
          
          cp "$profile_path" "$output_path"
        shell: bash

      - name: Decode keystore
        if: ${{ inputs.release }}
        env:
          ENCODED_KEYSTORE: ${{ secrets.keystore_base64 }}
        run: |
          node ./scripts/file_base64_converter.js 2 $ENCODED_KEYSTORE $KEYSTORE_PATH

      - name: Build release APKs
        if: ${{ inputs.release }}
        env:
          KEYSTORE_PASSWORD: ${{ secrets.keystore_password }}
          KEYSTORE_KEY_PASSWORD: ${{ secrets.keystore_key_password }}
        run: ./gradlew app:assembleRelease

      - name: Cleanup keystore
        if: always()
        run: |
          [ -e $KEYSTORE_PATH ] && rm $KEYSTORE_PATH
        shell: bash

      - name: Upload APKs
        if: ${{ inputs.release }}
        uses: actions/upload-artifact@v3
        with:
          name: apk
          path: android/app/build/outputs/apk/release/*.apk
